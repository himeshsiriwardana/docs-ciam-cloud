---
openapi: 3.0.0
info:
  title: WSO2 Private CIAM Cloud - Organizational Role Management
  description: This is the RESTful API for managing organizational roles in CIAM Cloud. This API allows users to create, update, retrieve, and delete organization roles.
  #contact:
  #  name: WSO2
  #  url: http://wso2.com/products/identity-server
  #  email: iam-dev@wso2.org
  #license:
  #  name: Apache 2.0
  #  url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
- url: https://{server-url}/o/{organization-domain}/api/server/v1/organizations
  variables:
    server-url:
      default: localhost:9443
    organization-domain:
      default: 10084a8d-113f-4211-a0d5-efe36b082211
security:
- OAuth2: []
- BasicAuth: []
paths:
  /{organization-id}/roles:
    get:
      tags:
      - Organization Role Management
      summary: Get roles inside an organization.
      description: This API returns roles in an organization based on the provided filter and limit.
      parameters:
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Condition to filter the retrieval of records.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: count
        in: query
        description: Maximum number of records to be returned. (Should be greater than 0)
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: cursor
        in: query
        description: The cursor to retrieve the records.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesListResponse'
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Organization Role Management
      summary: Create a role inside an organization.
      description: This API creates a role inside an organization, assigns users, groups and permissions, and returns the details of the created role including its unique id.
      operationId: createRole
      parameters:
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Represents display name, set of permissions, set of groups, set of users that are to be assigned to the role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePostRequest'
        required: true
      responses:
        "201":
          description: Valid role is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePostResponse'
        "400":
          description: Invalid input in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{organization-id}/roles/{role-id}:
    get:
      tags:
      - Organization Role Management
      summary: Get role by ID
      description: This API returns the role details of a particular role using its unique id.
      parameters:
      - name: role-id
        in: path
        description: ID of the role.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Valid role is found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGetResponse'
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Organization Role Management
      summary: Update Role - PUT
      description: This API updates the role details and returns the updated role details using a PUT operation.
      parameters:
      - name: role-id
        in: path
        description: ID of the role.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: This represents a set of values that need to be changed in the role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePutRequest'
        required: true
      responses:
        "200":
          description: Role is successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePutResponse'
        "400":
          description: Invalid input in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Organization Role Management
      summary: Delete a role inside an organization.
      description: This API deletes a particular role inside an organization using its unique ID.
      parameters:
      - name: role-id
        in: path
        description: ID of the role.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Role is deleted.
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Organization Role Management
      summary: Update Role - PATCH
      description: This API updates the role details and returns the updated role details.
      parameters:
      - name: role-id
        in: path
        description: ID of the role.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: organization-id
        in: path
        description: ID of the organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: This represents a set of values that need to be changed in the role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePatchRequest'
        required: true
      responses:
        "200":
          description: Role is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePatchResponse'
        "400":
          description: Invalid input in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication information is missing or invalid.
        "403":
          description: Access forbidden.
        "404":
          description: Requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: An error code.
          example: ORG-00000
        message:
          type: string
          description: An error message.
          example: Some error message
        description:
          type: string
          description: An error description.
          example: Some error description
        traceId:
          type: string
          description: An error trace identifier.
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
    RolesListResponse:
      type: object
      properties:
        totalResults:
          type: integer
          description: Total results to be fetched.
          format: int32
          example: 100
        nextCursor:
          type: string
          description: A cursor to obtain the next page of results in a subsequent request.
          example: eyJjdXJzb3JWYWx1ZSI6ImQgcm9sZSIsImRpcmVjdGlvbiI6IkZPUldBUkQifQ
        previousCursor:
          type: string
          description: A cursor to obtain the previous page of results in a subsequent request.
          example: eyJjdXJzb3JWYWx1ZSI6ImIgcm9sZSIsImRpcmVjdGlvbiI6IkJBQ0tXQVJEIn0
        itemsPerPage:
          type: integer
          description: Number of roles per page.
          format: int32
          example: 10
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleObj'
    RoleObj:
      type: object
      properties:
        id:
          type: string
          example: 4645709c-ea8c-4495-8590-e1fa0efe3de0
        displayName:
          type: string
          example: loginRole
        meta:
          $ref: '#/components/schemas/RoleObj_meta'
    RolePostRequest:
      required:
      - displayName
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        users:
          type: array
          items:
            $ref: '#/components/schemas/RolePostRequestUser'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/RolePostRequestGroup'
        permissions:
          type: array
          items:
            type: string
            example: /permission/admin/login
    RolePostRequestUser:
      type: object
      properties:
        value:
          type: string
          example: 008bba85-451d-414b-87de-c03b5a1f4217
    RolePostRequestGroup:
      type: object
      properties:
        value:
          type: string
          example: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
    RolePostResponse:
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        meta:
          $ref: '#/components/schemas/RoleObj_meta'
        id:
          type: string
          example: 4645709c-ea8c-4495-8590-e1fa0efe3de0
    RoleGetResponse:
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        meta:
          $ref: '#/components/schemas/RoleObj_meta'
        id:
          type: string
          example: 4645709c-ea8c-4495-8590-e1fa0efe3de0
        users:
          type: array
          items:
            $ref: '#/components/schemas/RoleGetResponseUser'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/RoleGetResponseGroup'
        permissions:
          type: array
          items:
            type: string
            example: /permission/admin/login
    RoleGetResponseUser:
      type: object
      properties:
        $ref:
          type: string
          example: https://localhost:9443/o/10084a8d-113f-4211-a0d5-efe36b082211/api/server/v1/organizations/48e31bc5-1669-4de1-bb22-c71e443aeb8b/users/3a12bae9-4386-44be-befd-caf349297f45
        display:
          type: string
          example: kim
        value:
          type: string
          example: 3a12bae9-4386-44be-befd-caf349297f45
    RoleGetResponseGroup:
      type: object
      properties:
        $ref:
          type: string
          example: https://localhost:9443/o/10084a8d-113f-4211-a0d5-efe36b082211/api/server/v1/organizations/48e31bc5-1669-4de1-bb22-c71e443aeb8b/groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469
        display:
          type: string
          example: PRIMARY/manager
        value:
          type: string
          example: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
    RolePutRequest:
      required:
      - displayName
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        users:
          type: array
          items:
            $ref: '#/components/schemas/RolePutRequestUser'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/RolePutRequestGroup'
        permissions:
          type: array
          items:
            type: string
            example: /permission/admin/manage/add
    RolePutRequestUser:
      type: object
      properties:
        value:
          type: string
          example: 409ca90b-2ba6-4474-9a45-2cf7376e6e43
    RolePutRequestGroup:
      type: object
      properties:
        value:
          type: string
          example: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
    RolePutResponse:
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        meta:
          $ref: '#/components/schemas/RolePutResponse_meta'
        value:
          type: string
          example: 4645709c-ea8c-4495-8590-e1fa0fe3de0
    RolePatchRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/RolePatchOperation'
    RolePatchOperation:
      type: object
      properties:
        op:
          type: string
          example: add
          enum:
          - add
          - remove
          - replace
        path:
          type: string
          example: groups
        value:
          type: array
          items:
            type: string
            example: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
    RolePatchResponse:
      type: object
      properties:
        displayName:
          type: string
          example: loginRole
        meta:
          $ref: '#/components/schemas/RolePutResponse_meta'
        id:
          type: string
          example: 4645709c-ea8c-4495-8590-e1fa0fe3de0
    RoleObj_meta:
      type: object
      properties:
        location:
          type: string
          example: https://localhost:9443/o/10084a8d-113f-4211-a0d5-efe36b082211/api/server/v1/organizations/48e31bc5-1669-4de1-bb22-c71e443aeb8b/roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
    RolePutResponse_meta:
      type: object
      properties:
        location:
          type: string
          example: https://localhost:9443/o/10084a8d-113f-4211-a0d5-efe36b082211/api/server/v1/organizations/48e31bc5-1669-4de1-bb22-c71e443aeb8b/roles/4645709c-ea8c-4495-8590-e1fa0fe3de0
  responses:
    BadRequest:
      description: Invalid input in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Requested resource is not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication information is missing or invalid.
    Forbidden:
      description: Access forbidden.
    Conflict:
      description: Conflict response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    filterQueryParam:
      name: filter
      in: query
      description: Condition to filter the retrieval of records.
      required: false
      style: form
      explode: true
      schema:
        type: string
    countQueryParam:
      name: count
      in: query
      description: Maximum number of records to be returned. (Should be greater than 0)
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
    cursorQueryParam:
      name: cursor
      in: query
      description: The cursor to retrieve the records.
      required: false
      style: form
      explode: true
      schema:
        type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes: {}
